var _codeMap;

function _defineProperty(e, r, o) {
    return r in e ? Object.defineProperty(e, r, {
        value: o,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = o, e;
}

var codeMap = (_defineProperty(_codeMap = {
    "&forall;": "∀",
    "&part;": "∂",
    "&exists;": "∃",
    "&empty;": "∅",
    "&nabla;": "∇",
    "&isin;": "∈",
    "&notin;": "∉",
    "&ni;": "∋",
    "&prod;": "∏",
    "&sum;": "∑",
    "&minus;": "−",
    "&lowast;": "∗",
    "&radic;": "√",
    "&prop;": "∝",
    "&infin;": "∞",
    "&ang;": "∠",
    "&and;": "∧",
    "&or;": "∨",
    "&cap;": "∩"
}, "&cap;", "∪"), _defineProperty(_codeMap, "&int;", "∫"), _defineProperty(_codeMap, "&there4;", "∴"), 
_defineProperty(_codeMap, "&sim;", "∼"), _defineProperty(_codeMap, "&cong;", "≅"), 
_defineProperty(_codeMap, "&asymp;", "≈"), _defineProperty(_codeMap, "&ne;", "≠"), 
_defineProperty(_codeMap, "&le;", "≤"), _defineProperty(_codeMap, "&ge;", "≥"), 
_defineProperty(_codeMap, "&sub;", "⊂"), _defineProperty(_codeMap, "&sup;", "⊃"), 
_defineProperty(_codeMap, "&nsub;", "⊄"), _defineProperty(_codeMap, "&sube;", "⊆"), 
_defineProperty(_codeMap, "&supe;", "⊇"), _defineProperty(_codeMap, "&oplus;", "⊕"), 
_defineProperty(_codeMap, "&otimes;", "⊗"), _defineProperty(_codeMap, "&perp;", "⊥"), 
_defineProperty(_codeMap, "&sdot;", "⋅"), _defineProperty(_codeMap, "&Alpha;", "Α"), 
_defineProperty(_codeMap, "&Beta;", "Β"), _defineProperty(_codeMap, "&Gamma;", "Γ"), 
_defineProperty(_codeMap, "&Delta;", "Δ"), _defineProperty(_codeMap, "&Epsilon;", "Ε"), 
_defineProperty(_codeMap, "&Zeta;", "Ζ"), _defineProperty(_codeMap, "&Eta;", "Η"), 
_defineProperty(_codeMap, "&Theta;", "Θ"), _defineProperty(_codeMap, "&Iota;", "Ι"), 
_defineProperty(_codeMap, "&Kappa;", "Κ"), _defineProperty(_codeMap, "&Lambda;", "Λ"), 
_defineProperty(_codeMap, "&Mu;", "Μ"), _defineProperty(_codeMap, "&Nu;", "Ν"), 
_defineProperty(_codeMap, "&Xi;", "Ν"), _defineProperty(_codeMap, "&Omicron;", "Ο"), 
_defineProperty(_codeMap, "&Pi;", "Π"), _defineProperty(_codeMap, "&Rho;", "Ρ"), 
_defineProperty(_codeMap, "&Sigma;", "Σ"), _defineProperty(_codeMap, "&Tau;", "Τ"), 
_defineProperty(_codeMap, "&Upsilon;", "Υ"), _defineProperty(_codeMap, "&Phi;", "Φ"), 
_defineProperty(_codeMap, "&Chi;", "Χ"), _defineProperty(_codeMap, "&Psi;", "Ψ"), 
_defineProperty(_codeMap, "&Omega;", "Ω"), _defineProperty(_codeMap, "&alpha;", "α"), 
_defineProperty(_codeMap, "&beta;", "β"), _defineProperty(_codeMap, "&gamma;", "γ"), 
_defineProperty(_codeMap, "&delta;", "δ"), _defineProperty(_codeMap, "&epsilon;", "ε"), 
_defineProperty(_codeMap, "&zeta;", "ζ"), _defineProperty(_codeMap, "&eta;", "η"), 
_defineProperty(_codeMap, "&theta;", "θ"), _defineProperty(_codeMap, "&iota;", "ι"), 
_defineProperty(_codeMap, "&kappa;", "κ"), _defineProperty(_codeMap, "&lambda;", "λ"), 
_defineProperty(_codeMap, "&mu;", "μ"), _defineProperty(_codeMap, "&nu;", "ν"), 
_defineProperty(_codeMap, "&xi;", "ξ"), _defineProperty(_codeMap, "&omicron;", "ο"), 
_defineProperty(_codeMap, "&pi;", "π"), _defineProperty(_codeMap, "&rho;", "ρ"), 
_defineProperty(_codeMap, "&sigmaf;", "ς"), _defineProperty(_codeMap, "&sigma;", "σ"), 
_defineProperty(_codeMap, "&tau;", "τ"), _defineProperty(_codeMap, "&upsilon;", "υ"), 
_defineProperty(_codeMap, "&phi;", "φ"), _defineProperty(_codeMap, "&chi;", "χ"), 
_defineProperty(_codeMap, "&psi;", "ψ"), _defineProperty(_codeMap, "&omega;", "ω"), 
_defineProperty(_codeMap, "&thetasym;", "ϑ"), _defineProperty(_codeMap, "&upsih;", "ϒ"), 
_defineProperty(_codeMap, "&piv;", "ϖ"), _defineProperty(_codeMap, "&middot;", "·"), 
_defineProperty(_codeMap, "&nbsp;", " "), _defineProperty(_codeMap, "&quot;", "'"), 
_defineProperty(_codeMap, "&amp;", "&"), _defineProperty(_codeMap, "&lt;", "<"), 
_defineProperty(_codeMap, "&gt;", ">"), _defineProperty(_codeMap, "&OElig;", "Œ"), 
_defineProperty(_codeMap, "&oelig;", "œ"), _defineProperty(_codeMap, "&Scaron;", "Š"), 
_defineProperty(_codeMap, "&scaron;", "š"), _defineProperty(_codeMap, "&Yuml;", "Ÿ"), 
_defineProperty(_codeMap, "&fnof;", "ƒ"), _defineProperty(_codeMap, "&circ;", "ˆ"), 
_defineProperty(_codeMap, "&tilde;", "˜"), _defineProperty(_codeMap, "&ensp;", ""), 
_defineProperty(_codeMap, "&emsp;", ""), _defineProperty(_codeMap, "&thinsp;", ""), 
_defineProperty(_codeMap, "&zwnj;", ""), _defineProperty(_codeMap, "&zwj;", ""), 
_defineProperty(_codeMap, "&lrm;", ""), _defineProperty(_codeMap, "&rlm;", ""), 
_defineProperty(_codeMap, "&ndash;", "–"), _defineProperty(_codeMap, "&mdash;", "—"), 
_defineProperty(_codeMap, "&lsquo;", "‘"), _defineProperty(_codeMap, "&rsquo;", "’"), 
_defineProperty(_codeMap, "&sbquo;", "‚"), _defineProperty(_codeMap, "&ldquo;", "“"), 
_defineProperty(_codeMap, "&rdquo;", "”"), _defineProperty(_codeMap, "&bdquo;", "„"), 
_defineProperty(_codeMap, "&dagger;", "†"), _defineProperty(_codeMap, "&Dagger;", "‡"), 
_defineProperty(_codeMap, "&bull;", "•"), _defineProperty(_codeMap, "&hellip;", "…"), 
_defineProperty(_codeMap, "&permil;", "‰"), _defineProperty(_codeMap, "&prime;", "′"), 
_defineProperty(_codeMap, "&Prime;", "″"), _defineProperty(_codeMap, "&lsaquo;", "‹"), 
_defineProperty(_codeMap, "&rsaquo;", "›"), _defineProperty(_codeMap, "&oline;", "‾"), 
_defineProperty(_codeMap, "&euro;", "€"), _defineProperty(_codeMap, "&trade;", "™"), 
_defineProperty(_codeMap, "&larr;", "←"), _defineProperty(_codeMap, "&uarr;", "↑"), 
_defineProperty(_codeMap, "&rarr;", "→"), _defineProperty(_codeMap, "&darr;", "↓"), 
_defineProperty(_codeMap, "&harr;", "↔"), _defineProperty(_codeMap, "&crarr;", "↵"), 
_defineProperty(_codeMap, "&lceil;", "⌈"), _defineProperty(_codeMap, "&rceil;", "⌉"), 
_defineProperty(_codeMap, "&lfloor;", "⌊"), _defineProperty(_codeMap, "&rfloor;", "⌋"), 
_defineProperty(_codeMap, "&loz;", "◊"), _defineProperty(_codeMap, "&spades;", "♠"), 
_defineProperty(_codeMap, "&clubs;", "♣"), _defineProperty(_codeMap, "&hearts;", "♥"), 
_defineProperty(_codeMap, "&diams;", "♦"), _defineProperty(_codeMap, "&#39;", "'"), 
_codeMap), transform = function(e) {
    for (var r in codeMap) e = e.replace(new RegExp(r, "g"), codeMap[r]);
    return e;
};

module.exports = {
    transform: transform
};